{
    "swagger": "2.0",
    "info": {
        "description": "This is a part of authentification service, that can genrate pairs of tokens",
        "title": "Refresh token service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/tokens": {
            "get": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "Returns user's id from access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get user ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.UidResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tokens/refresh": {
            "post": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "Refreshes access and refresh tokens. You can only refresh tokens that were returned together, after resfresh old pair is invalid\nIf User-Agent from current request is unlike User-Agent from last request you will be unauthed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Refresh a pair of tokens",
                "parameters": [
                    {
                        "description": "old refresh token",
                        "name": "old_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User-Agent",
                        "name": "User-Agent",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User IP-adress",
                        "name": "X-Forwarded-For",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tokens/{id}": {
            "get": {
                "description": "Creates access and refresh tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Create pair of tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AuthResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "Deletes all user data from DB",
                "tags": [
                    "tokens"
                ],
                "summary": "Unauthorize user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "auth.RefreshRequest": {
            "type": "object",
            "properties": {
                "old_token": {
                    "type": "string"
                }
            }
        },
        "auth.UidResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}